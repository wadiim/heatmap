#!/bin/bash

declare -i min
declare -i max

# Default colors (values are in sixel format):
colors=(
	[0]="18;20;23"
	[1]="6;28;16"
	[2]="0;43;20"
	[3]="15;65;26"
	[4]="22;83;33"
)

input=( $(cat -) )

# Find min and max input values.
for val in "${input[@]}"; do

	# Remove non-integer values.
	if [[ ! $val =~ ^-?[0-9]+$ ]]; then
		input=( "${input[@]/$val}" )
		continue
	fi

	if [[ ! -v min ]] || (( $val < $min )); then
		min=$val
	fi
	if [[ ! -v max ]] || (( $val > $max )); then
		max=$val
	fi
done

# Divide $1 by $2 and round the result to the nearest integer.
ndiv() {
	numerator=$1
	denominator=$2

	echo "$(( (numerator + denominator/2) / denominator ))"
}

# Divide $1 by $2 and round the result up.
udiv() {
	numerator=$1
	denominator=$2

	echo "$(( (numerator + denominator-1) / denominator ))"
}

# Map input values to color codes.
cells=( )
range=$(( max - min ))
max_color_code=$(( ${#colors[@]} - 1 ))
for val in "${input[@]}"; do
	if [[ $val == "" ]]; then
		continue
	fi
	cells+=( "$( ndiv $(( (val - min)*max_color_code )) range )" )
done

pixmap=( )
cell_size=2
margin_size=1
max_num_of_cols=8

declare -i num_of_cols

if (( ${#cells[@]} < max_num_of_cols )); then
	num_of_cols="${#cells[@]}"
else
	num_of_cols="$max_num_of_cols"
fi

num_of_rows=$( udiv ${#cells[@]} $num_of_cols )
width="$(( cell_size*num_of_cols + margin_size*(num_of_cols - 1) ))"
height="$(( cell_size*num_of_rows + margin_size*(num_of_rows - 1) ))"

# Generate pixmap
for row in $( seq 0 $(( num_of_rows - 1 )) ); do
	for col in $( seq 0 $(( num_of_cols - 1 )) ); do
		cell_idx=$(( row*num_of_cols + col ))
		for y in $( seq 0 $(( cell_size - 1)) ); do
			for x in $( seq 0 $(( (cell_size - 1) + margin_size )) ); do
				pixmap_idx=$(( row*(cell_size + margin_size)*width + col*(cell_size + margin_size) + x + y*width ))
				if (( x > (cell_size - 1) )); then
					# Add vertical margin
					if (( col < (num_of_cols - 1) )); then
						pixmap[$pixmap_idx]=$(( -1 ))
					else
						continue
					fi
				else
					if (( cell_idx >= ${#cells[@]} )); then
						pixmap[$pixmap_idx]=$(( -1 ))
					else
						pixmap[$pixmap_idx]="$(( ${cells[$cell_idx]} ))"
					fi
				fi
			done
		done
	done
	# Add horizontal margin
	if (( row < (num_of_rows - 1) )); then
		for i in $( seq 0 $(( width*margin_size - 1 )) ); do
			pixmap+=( "-1" )
		done
	fi
done

# Add bottom padding if necessary to make the pixmap height a multiple of 6.
while (( height % 6 != 0 )); do
	for i in $( seq 0 $(( width - 1 )) ); do
		pixmap+=( "-1" )
	done
	height=$(( height+=1 ))
done
